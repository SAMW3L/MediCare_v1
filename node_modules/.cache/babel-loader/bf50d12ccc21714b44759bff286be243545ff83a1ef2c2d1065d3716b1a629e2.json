{"ast":null,"code":"var _jsxFileName = \"/home/samuel/development/PMS/Pharmacy v2/medicare/src/contexts/UserContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(undefined);\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = userData => {\n    setUser(userData); // Set user data on login\n  };\n  const logout = () => {\n    setUser(null); // Clear user data on logout\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","UserContext","undefined","UserProvider","children","_s","user","setUser","login","userData","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["/home/samuel/development/PMS/Pharmacy v2/medicare/src/contexts/UserContext.tsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\n\ninterface UserContextType {\n  user: { username: string; role: string } | null;\n  login: (user: { username: string; role: string }) => void;\n  logout: () => void;\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport const UserProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<{ username: string; role: string } | null>(null);\n\n  const login = (userData: { username: string; role: string }) => {\n    setUser(userData);  // Set user data on login\n  };\n\n  const logout = () => {\n    setUser(null);  // Clear user data on logout\n  };\n\n  return (\n    <UserContext.Provider value={{ user, login, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5D,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAA4C,IAAI,CAAC;EAEjF,MAAMU,KAAK,GAAIC,QAA4C,IAAK;IAC9DF,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAE;EACtB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBH,OAAO,CAAC,IAAI,CAAC,CAAC,CAAE;EAClB,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEN,IAAI;MAAEE,KAAK;MAAEE;IAAO,CAAE;IAAAN,QAAA,EAClDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACX,EAAA,CAhBWF,YAAsB;AAAAc,EAAA,GAAtBd,YAAsB;AAkBnC,OAAO,MAAMe,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGvB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACmB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}