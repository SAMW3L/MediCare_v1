{"ast":null,"code":"var _jsxFileName = \"/home/samuel/development/PMS/Pharmacy v2/medicare/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport EmployeeManagement from './components/EmployeeManagement';\nimport MedicineManagement from './components/MedicineManagement';\nimport Sales from './components/Sales';\nimport Reports from './components/Reports';\nimport Navbar from './components/Navbar';\nimport { UserProvider } from './contexts/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  return /*#__PURE__*/_jsxDEV(UserProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [isAuthenticated && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Login, {\n              setIsAuthenticated: setIsAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/employees\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(EmployeeManagement, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/medicines\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(MedicineManagement, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sales\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Sales, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/reports\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Reports, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","Login","Dashboard","EmployeeManagement","MedicineManagement","Sales","Reports","Navbar","UserProvider","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","_c","$RefreshReg$"],"sources":["/home/samuel/development/PMS/Pharmacy v2/medicare/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport EmployeeManagement from './components/EmployeeManagement';\nimport MedicineManagement from './components/MedicineManagement';\nimport Sales from './components/Sales';\nimport Reports from './components/Reports';\nimport Navbar from './components/Navbar';\nimport { UserProvider } from './contexts/UserContext';\n\nconst App: React.FC = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  return (\n    <UserProvider>\n      <div className=\"min-h-screen bg-gray-100\">\n        <Router>\n          {isAuthenticated && <Navbar />}\n          <Routes>\n            <Route \n              path=\"/login\" \n              element={\n                isAuthenticated ? (\n                  <Navigate to=\"/\" replace />\n                ) : (\n                  <Login setIsAuthenticated={setIsAuthenticated} />\n                )\n              } \n            />\n            <Route\n              path=\"/\"\n              element={\n                isAuthenticated ? (\n                  <Dashboard />\n                ) : (\n                  <Navigate to=\"/login\" replace />\n                )\n              }\n            />\n            <Route\n              path=\"/employees\"\n              element={\n                isAuthenticated ? (\n                  <EmployeeManagement />\n                ) : (\n                  <Navigate to=\"/login\" replace />\n                )\n              }\n            />\n            <Route\n              path=\"/medicines\"\n              element={\n                isAuthenticated ? (\n                  <MedicineManagement />\n                ) : (\n                  <Navigate to=\"/login\" replace />\n                )\n              }\n            />\n            <Route\n              path=\"/sales\"\n              element={\n                isAuthenticated ? (\n                  <Sales />\n                ) : (\n                  <Navigate to=\"/login\" replace />\n                )\n              }\n            />\n            <Route\n              path=\"/reports\"\n              element={\n                isAuthenticated ? (\n                  <Reports />\n                ) : (\n                  <Navigate to=\"/login\" replace />\n                )\n              }\n            />\n          </Routes>\n        </Router>\n      </div>\n    </UserProvider>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}