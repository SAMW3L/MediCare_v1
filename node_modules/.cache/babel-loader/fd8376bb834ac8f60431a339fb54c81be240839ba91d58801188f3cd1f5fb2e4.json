{"ast":null,"code":"var _jsxFileName = \"/home/samuel/development/PMS/Pharmacy v2/medicare/src/components/Sales.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ShoppingCart, Printer } from 'lucide-react';\nimport jsPDF from 'jspdf';\nimport { api } from '../api'; // Ensure the correct path to your API\n\n// Define the medicine interface\n\n// Define the sale item interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sales = () => {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [selectedMedicine, setSelectedMedicine] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [message, setMessage] = useState('');\n  const [searchTerm, setSearchTerm] = useState(''); // New state for search filter\n\n  // Fetch medicines from the database when the component mounts\n  useEffect(() => {\n    fetchMedicines();\n  }, []);\n  const fetchMedicines = async () => {\n    try {\n      const response = await api.getMedicines(); // Ensure you have an API call for this\n      if (response && Array.isArray(response)) {\n        setMedicines(response);\n        setMessage('Medicines loaded successfully');\n      } else {\n        throw new Error('Unexpected response format');\n      }\n    } catch (error) {\n      setMessage('Failed to load medicines');\n    } finally {\n      setTimeout(() => setMessage(''), 3000); // Clear the message after 3 seconds\n    }\n  };\n\n  // Handle adding selected medicine to the cart\n  const handleAddToCart = () => {\n    if (selectedMedicine && quantity > 0) {\n      const medicine = medicines.find(m => m.id === Number(selectedMedicine));\n      if (medicine && medicine.quantity >= quantity) {\n        const newItem = {\n          medicineId: medicine.id,\n          name: medicine.name,\n          quantity,\n          price: medicine.price,\n          total: medicine.price * quantity\n        };\n        setCart([...cart, newItem]);\n        setSelectedMedicine('');\n        setQuantity(1);\n        setMessage('Item added to cart');\n      } else {\n        setMessage('Not enough stock available');\n      }\n    }\n  };\n\n  // Handle removing items from the cart\n  const handleRemoveFromCart = index => {\n    const newCart = [...cart];\n    newCart.splice(index, 1);\n    setCart(newCart);\n    setMessage('Item removed from cart');\n  };\n\n  // Handle completing the sale and updating the database\n  const handleCompleteSale = async () => {\n    try {\n      for (const item of cart) {\n        const medicine = medicines.find(m => m.id === item.medicineId);\n        if (medicine) {\n          const updatedMedicineQuantity = medicine.quantity - item.quantity;\n          if (updatedQuantity >= 0) {\n            // Update medicine quantity in the database\n            await api.updateMedicineQuantity(medicine.id, updatedQuantity);\n          } else {\n            setMessage(`Insufficient stock for ${medicine.name}`);\n            return; // Prevent sale if stock is insufficient\n          }\n        }\n      }\n      setMessage('Transaction completed successfully');\n      setCart([]); // Clear cart after sale\n      fetchMedicines(); // Refresh medicine data to reflect updated quantities\n    } catch (error) {\n      setMessage('Transaction failed');\n    } finally {\n      setTimeout(() => setMessage(''), 3000); // Clear the message after 3 seconds\n    }\n  };\n\n  // Handle printing the receipt for the transaction\n  const handlePrintReceipt = () => {\n    const doc = new jsPDF();\n    const currentDate = new Date().toLocaleString();\n    doc.text('Receipt', 14, 20);\n    doc.text(`Date: ${currentDate}`, 14, 30);\n    doc.text('Items:', 14, 40);\n    let y = 50;\n\n    // Loop through the cart and add items to the receipt\n    cart.forEach(item => {\n      doc.text(`${item.name} x ${item.quantity}: Tsh.${item.total.toFixed(2)}`, 14, y);\n      y += 10;\n    });\n    const total = cart.reduce((sum, item) => sum + item.total, 0);\n    y += 10;\n    doc.text(`Total: Tsh.${total.toFixed(2)}`, 14, y);\n    y += 10;\n    doc.text(`Payment Method: ${paymentMethod}`, 14, y);\n    y += 20;\n    doc.text('Medicine Dose:', 14, y);\n    doc.line(14, y + 10, 200, y + 10);\n    y += 30;\n    doc.text('Welcome back', 14, y);\n    doc.save('receipt.pdf');\n  };\n\n  // Filter medicines based on search term\n  const filteredMedicines = medicines.filter(medicine => medicine.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const total = cart.reduce((sum, item) => sum + item.total, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-green-900 mb-6\",\n      children: \"Dispensing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search Medicine\",\n            className: \"w-full p-2 border rounded\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMedicine,\n            onChange: e => setSelectedMedicine(Number(e.target.value)),\n            className: \"w-full p-2 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Medicine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), filteredMedicines.map(medicine => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: medicine.id,\n              children: [medicine.name, \" - Tsh.\", medicine.price.toFixed(2)]\n            }, medicine.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: quantity,\n            onChange: e => setQuantity(Number(e.target.value)),\n            min: \"1\",\n            className: \"w-full p-2 border rounded\",\n            placeholder: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddToCart,\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item.name, \" x \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Tsh.\", item.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveFromCart(index),\n            className: \"text-red-600 hover:text-red-900\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Total: Tsh.\", total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: paymentMethod,\n            onChange: e => setPaymentMethod(e.target.value),\n            className: \"w-full p-2 border rounded mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cash\",\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"credit\",\n              children: \"Credit Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mobile\",\n              children: \"Mobile Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCompleteSale,\n            className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded w-full mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(ShoppingCart, {\n              className: \"inline-block mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), \"Complete Sale\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrintReceipt,\n            className: \"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded w-full\",\n            children: [/*#__PURE__*/_jsxDEV(Printer, {\n              className: \"inline-block mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), \"Print Receipt\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(Sales, \"pcdyd8x3/VvBXkrO3+1VO6Az5AA=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","useEffect","ShoppingCart","Printer","jsPDF","api","jsxDEV","_jsxDEV","Sales","_s","medicines","setMedicines","cart","setCart","selectedMedicine","setSelectedMedicine","quantity","setQuantity","paymentMethod","setPaymentMethod","message","setMessage","searchTerm","setSearchTerm","fetchMedicines","response","getMedicines","Array","isArray","Error","error","setTimeout","handleAddToCart","medicine","find","m","id","Number","newItem","medicineId","name","price","total","handleRemoveFromCart","index","newCart","splice","handleCompleteSale","item","updatedMedicineQuantity","updatedQuantity","updateMedicineQuantity","handlePrintReceipt","doc","currentDate","Date","toLocaleString","text","y","forEach","toFixed","reduce","sum","line","save","filteredMedicines","filter","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","min","onClick","_c","$RefreshReg$"],"sources":["/home/samuel/development/PMS/Pharmacy v2/medicare/src/components/Sales.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ShoppingCart, Printer } from 'lucide-react';\nimport jsPDF from 'jspdf';\nimport { api } from '../api'; // Ensure the correct path to your API\n\n// Define the medicine interface\ninterface Medicine {\n  id: number;\n  name: string;\n  price: number;\n  quantity: number;\n}\n\n// Define the sale item interface\ninterface SaleItem {\n  medicineId: number;\n  name: string;\n  quantity: number;\n  price: number;\n  total: number;\n}\n\nconst Sales: React.FC = () => {\n  const [medicines, setMedicines] = useState<Medicine[]>([]);\n  const [cart, setCart] = useState<SaleItem[]>([]);\n  const [selectedMedicine, setSelectedMedicine] = useState<number | ''>('');\n  const [quantity, setQuantity] = useState<number>(1);\n  const [paymentMethod, setPaymentMethod] = useState<string>('cash');\n  const [message, setMessage] = useState<string>('');\n  const [searchTerm, setSearchTerm] = useState<string>(''); // New state for search filter\n\n  // Fetch medicines from the database when the component mounts\n  useEffect(() => {\n    fetchMedicines();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const response = await api.getMedicines(); // Ensure you have an API call for this\n      if (response && Array.isArray(response)) {\n        setMedicines(response);\n        setMessage('Medicines loaded successfully');\n      } else {\n        throw new Error('Unexpected response format');\n      }\n    } catch (error) {\n      setMessage('Failed to load medicines');\n    } finally {\n      setTimeout(() => setMessage(''), 3000); // Clear the message after 3 seconds\n    }\n  };\n\n  // Handle adding selected medicine to the cart\n  const handleAddToCart = () => {\n    if (selectedMedicine && quantity > 0) {\n      const medicine = medicines.find(m => m.id === Number(selectedMedicine));\n      if (medicine && medicine.quantity >= quantity) {\n        const newItem: SaleItem = {\n          medicineId: medicine.id,\n          name: medicine.name,\n          quantity,\n          price: medicine.price,\n          total: medicine.price * quantity,\n        };\n        setCart([...cart, newItem]);\n        setSelectedMedicine('');\n        setQuantity(1);\n        setMessage('Item added to cart');\n      } else {\n        setMessage('Not enough stock available');\n      }\n    }\n  };\n\n  // Handle removing items from the cart\n  const handleRemoveFromCart = (index: number) => {\n    const newCart = [...cart];\n    newCart.splice(index, 1);\n    setCart(newCart);\n    setMessage('Item removed from cart');\n  };\n\n  // Handle completing the sale and updating the database\n  const handleCompleteSale = async () => {\n    try {\n      for (const item of cart) {\n        const medicine = medicines.find(m => m.id === item.medicineId);\n        if (medicine) {\n          const updatedMedicineQuantity = medicine.quantity - item.quantity;\n          if (updatedQuantity >= 0) {\n            // Update medicine quantity in the database\n            await api.updateMedicineQuantity(medicine.id, updatedQuantity);\n          } else {\n            setMessage(`Insufficient stock for ${medicine.name}`);\n            return; // Prevent sale if stock is insufficient\n          }\n        }\n      }\n      setMessage('Transaction completed successfully');\n      setCart([]); // Clear cart after sale\n      fetchMedicines(); // Refresh medicine data to reflect updated quantities\n    } catch (error) {\n      setMessage('Transaction failed');\n    } finally {\n      setTimeout(() => setMessage(''), 3000); // Clear the message after 3 seconds\n    }\n  };\n\n  // Handle printing the receipt for the transaction\n  const handlePrintReceipt = () => {\n    const doc = new jsPDF();\n    const currentDate = new Date().toLocaleString();\n    \n    doc.text('Receipt', 14, 20);\n    doc.text(`Date: ${currentDate}`, 14, 30);\n    doc.text('Items:', 14, 40);\n\n    let y = 50;\n\n    // Loop through the cart and add items to the receipt\n    cart.forEach(item => {\n      doc.text(`${item.name} x ${item.quantity}: Tsh.${item.total.toFixed(2)}`, 14, y);\n      y += 10;\n    });\n\n    const total = cart.reduce((sum, item) => sum + item.total, 0);\n    y += 10;\n    doc.text(`Total: Tsh.${total.toFixed(2)}`, 14, y);\n    y += 10;\n    doc.text(`Payment Method: ${paymentMethod}`, 14, y);\n    y += 20;\n    doc.text('Medicine Dose:', 14, y);\n    doc.line(14, y + 10, 200, y + 10);\n    y += 30;\n    doc.text('Welcome back', 14, y);\n\n    doc.save('receipt.pdf');\n  };\n\n  // Filter medicines based on search term\n  const filteredMedicines = medicines.filter(medicine =>\n    medicine.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const total = cart.reduce((sum, item) => sum + item.total, 0);\n\n  return (\n    <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n      <h1 className=\"text-3xl font-bold text-green-900 mb-6\">Dispensing</h1>\n\n      {/* Show message for any actions performed */}\n      {message && (\n        <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\">\n          {message}\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <h2 className=\"text-xl font-bold mb-4\">Add to Cart</h2>\n\n          {/* Search input for filtering medicines */}\n          <div className=\"mb-4\">\n            <input\n              type=\"text\"\n              placeholder=\"Search Medicine\"\n              className=\"w-full p-2 border rounded\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n\n          {/* Medicine dropdown list */}\n          <div className=\"mb-4\">\n            <select\n              value={selectedMedicine}\n              onChange={(e) => setSelectedMedicine(Number(e.target.value))}\n              className=\"w-full p-2 border rounded\"\n            >\n              <option value=\"\">Select Medicine</option>\n              {filteredMedicines.map((medicine) => (\n                <option key={medicine.id} value={medicine.id}>\n                  {medicine.name} - Tsh.{medicine.price.toFixed(2)}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Input for selecting quantity */}\n          <div className=\"mb-4\">\n            <input\n              type=\"number\"\n              value={quantity}\n              onChange={(e) => setQuantity(Number(e.target.value))}\n              min=\"1\"\n              className=\"w-full p-2 border rounded\"\n              placeholder=\"Quantity\"\n            />\n          </div>\n\n          {/* Button to add medicine to cart */}\n          <button\n            onClick={handleAddToCart}\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Add to Cart\n          </button>\n        </div>\n\n        <div>\n          <h2 className=\"text-xl font-bold mb-4\">Cart</h2>\n\n          {/* Display cart items */}\n          {cart.map((item, index) => (\n            <div key={index} className=\"flex justify-between items-center mb-2\">\n              <span>{item.name} x {item.quantity}</span>\n              <span>Tsh.{item.total.toFixed(2)}</span>\n              <button\n                onClick={() => handleRemoveFromCart(index)}\n                className=\"text-red-600 hover:text-red-900\"\n              >\n                Remove\n              </button>\n            </div>\n          ))}\n\n          {/* Display total amount */}\n          <div className=\"mt-4\">\n            <strong>Total: Tsh.{total.toFixed(2)}</strong>\n          </div>\n\n          {/* Select payment method */}\n          <div className=\"mt-4\">\n            <select\n              value={paymentMethod}\n              onChange={(e) => setPaymentMethod(e.target.value)}\n              className=\"w-full p-2 border rounded mb-2\"\n            >\n              <option value=\"cash\">Cash</option>\n              <option value=\"credit\">Credit Card</option>\n              <option value=\"mobile\">Mobile Payment</option>\n            </select>\n\n            {/* Button to complete sale */}\n            <button\n              onClick={handleCompleteSale}\n              className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded w-full mb-2\"\n            >\n              <ShoppingCart className=\"inline-block mr-2\" />\n              Complete Sale\n            </button>\n\n            {/* Button to print receipt */}\n            <button\n              onClick={handlePrintReceipt}\n              className=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded w-full\"\n            >\n              <Printer className=\"inline-block mr-2\" />\n              Print Receipt\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sales;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}